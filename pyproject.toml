[project]
name = "mem"
version = "0.1.0"
description = "Video work tracking system with local AI"
readme = "README.md"
requires-python = ">=3.9,<3.10"
license = {text = "MIT"}
authors = [
    {name = "Mem Team", email = "team@mem.dev"},
]

dependencies = [
    "opencv-python-headless>=4.8.0",
    "numpy>=1.24.0,<2",
    "pydantic>=2.0.0",
    "pillow>=10.0.0",
    "click>=8.1.0",
    "openai-whisper",
    "numba>=0.56.0",
    "rich>=13.0.0",
    "pyyaml>=6.0.1",
]

[project.scripts]
mem = "src.cli:cli"

[tool.uv]
dev-dependencies = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "faker>=20.0.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.black]
line-length = 100
target-version = ['py39']

[tool.ruff]
line-length = 100
target-version = "py39"
select = ["E", "W", "F", "I", "B", "C4", "UP", "N", "SIM"]
ignore = ["E501", "B008"]

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-ra --strict-markers"
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
]
asyncio_mode = "auto"